<Activity mc:Ignorable="sap sap2010" x:Class="BunningsWeb_ExtractProducts" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ProductURL" Type="InArgument(x:String)" />
    <x:Property Name="in_ProductRange" Type="InArgument(x:String)" />
    <x:Property Name="in_PageToExtract" Type="InArgument(x:Int32)" />
    <x:Property Name="out_MergedProductData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_BusinessRuleException" Type="OutArgument(ui:BusinessRuleException)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1401,3367</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>BunningsWeb_ExtractProducts_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="58">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>UiPath</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="86">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities.Api</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Api</AssemblyReference>
      <AssemblyReference>UiPath.Interop</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExtractProductData" sap:VirtualizedContainerService.HintSize="892.6666666666666,2841.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Default="1" Name="pageCounter" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable()]" Name="dtExtractProductData" />
      <Variable x:TypeArguments="x:Boolean" Name="isScrapedTextMatch" />
      <Variable x:TypeArguments="x:String" Name="scrapedProductRange" />
      <Variable x:TypeArguments="x:String" Default="chrome://newtab/" Name="browserURL" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;This workflow extracts product data from a Bunnings website for the provided product range URL across  specified number of pages and outputs the results into a DataTable (out_MergedDt).&#xA;&#xA;Arguments:&#xA;in_ProductURL (String): The base URL of the product range page.&#xA;in_ProductRange (String): The name of the product category being extracted.&#xA;in_PageToExtract (Int32): The number of pages to extract data from.&#xA;out_MergedProductData (DataTable): A DataTable containing all extracted product data.&#xA;out_BussinessRuleException (BussinessRuleException): A business rule exception that captures any expected validation failures during the product data extraction process.&#xA;&#xA;Pre Conditions: &#xA;in_ProductURL is URL pointing to a product list page.&#xA;in_ProductRange is product category (e.g., Power Tools, Welding).&#xA;in_PageToExtract is greater than 0.&#xA;&#xA;Post Conditions:&#xA;out_MergedProductData contains the extracted product data, or is empty if extraction failed.&#xA;out_BussinessRuleException is:&#xA;Set if the product range does not exist on the Bunnings website, or the scraped data table is empty.&#xA;Null if the data was successfully extracted and processed." DisplayName="Extract product data from Bunnings website" sap:VirtualizedContainerService.HintSize="658.6666666666666,2818.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_12">
      <Sequence.Variables>
        <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="ExtractDataTable" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="624.6666666666666,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;ExtractWebProducts START&quot;]" />
      <Assign DisplayName="Assign empty DataTable to out_MergedProductData" sap:VirtualizedContainerService.HintSize="624.6666666666666,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="sd:DataTable">[out_MergedProductData]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="sd:DataTable">[New DataTable()]</InArgument>
        </Assign.Value>
      </Assign>
      <TryCatch DisplayName="Try - Extract product data from Bunnings website" sap:VirtualizedContainerService.HintSize="624.6666666666666,1896" sap2010:WorkflowViewState.IdRef="TryCatch_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <TryCatch.Try>
          <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[in_PageToExtract&gt;=pageCounter]" DisplayName="Do - extract product data, while - PageToExtract &gt;= PageCounter" sap:VirtualizedContainerService.HintSize="622.6666666666666,1649.3333333333333" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
            <ui:InterruptibleDoWhile.Body>
              <Sequence DisplayName="Scrape product data from Bunnings website" sap:VirtualizedContainerService.HintSize="620.6666666666666,1549.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <uix:NApplicationCard AttachMode="ByInstance" CloseMode="IfOpenedByAppBrowser" DisplayName="Use Browser Chrome: Bunnings Australia" HealingAgentBehavior="Job" sap:VirtualizedContainerService.HintSize="586.6666666666666,1489.3333333333333" sap2010:WorkflowViewState.IdRef="NApplicationCard_12" InteractionMode="DebuggerApi" ScopeGuid="9fe06646-08ab-41d8-b646-04612213c233" Version="V2" WindowResize="Maximize">
                  <uix:NApplicationCard.Body>
                    <ActivityAction x:TypeArguments="x:Object">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Extract product data from Bunnings website" sap:VirtualizedContainerService.HintSize="552.6666666666666,1299.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_74">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If Condition="[pageCounter=1]" DisplayName="Check if the ProductRange exists on the Bunnings website (only on the first page)." sap:VirtualizedContainerService.HintSize="518.6666666666666,190.66666666666666" sap2010:WorkflowViewState.IdRef="If_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Get product range and compare with input" sap:VirtualizedContainerService.HintSize="516.6666666666666,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_77">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uix:NGetText DisplayName="Get Text 'ProductRange' from Bunnings website" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="482.6666666666667,191.33333333333334" sap2010:WorkflowViewState.IdRef="NGetText_3" ScopeIdentifier="9fe06646-08ab-41d8-b646-04612213c233" TextString="[scrapedProductRange]" Version="V5">
                                <uix:NGetText.Target>
                                  <uix:TargetAnchorable BrowserURL="bunnings.com.au/products/tools/automotive/automotive-tools" CVScreenId="7446a56f-91f1-45cb-8017-dc47834915d8" CvType="AnyWordGroup" DesignTimeRectangle="321, 303, 1280, 68" ElementType="Text" FullSelectorArgument="&lt;webctrl tag='H1' /&gt;" Guid="02c9d588-a139-44d1-bfb7-e5a7b2896d84" InformativeScreenshot="4795aae8663cc65d14a2e22fea0f3b15.png" ScopeSelectorArgument="[string.Format(&quot;&lt;html app='chrome.exe' title='{0}*' /&gt;&quot;, in_ProductRange)]" SearchSteps="Selector, CV" Version="V6" Visibility="Interactive" WaitForReadyArgument="Interactive" />
                                </uix:NGetText.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </uix:NGetText>
                              <Assign DisplayName="Assign isScrapedTextMatch based on scrapedProductRange" sap:VirtualizedContainerService.HintSize="482.6666666666667,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_12">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Boolean">[isScrapedTextMatch]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Boolean">[scrapedProductRange.Trim.ToLower.Contains(in_ProductRange.Trim.ToLower)]</InArgument>
                                </Assign.Value>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Assign>
                              <ui:LogMessage DisplayName="Log product range information for price comparison." sap:VirtualizedContainerService.HintSize="482.6666666666667,179.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Trace" Message="[&quot;Product range scraped from the website: &quot; + scrapedProductRange + Environment.NewLine +&#xA;&quot;Product range from the ProductInput file: &quot; + in_ProductRange]">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:LogMessage>
                              <If Condition="[isScrapedTextMatch]" DisplayName="Check if scraped ProductRange match one from ProductInput file" sap:VirtualizedContainerService.HintSize="482.6666666666667,48" sap2010:WorkflowViewState.IdRef="If_9">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence DisplayName="Then continue to extract data" sap:VirtualizedContainerService.HintSize="481.3333333333333,227.33333333333334" sap2010:WorkflowViewState.IdRef="Sequence_75">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log message indicating product range matches" sap:VirtualizedContainerService.HintSize="447.3333333333333,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;The product range matches the expected values.&quot;]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else ProductRange not found at Bunnings, throw BusinessRuleException" sap:VirtualizedContainerService.HintSize="481.3333333333333,351.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_76">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LogMessage DisplayName="Log error when product ranges do not match." sap:VirtualizedContainerService.HintSize="447.3333333333333,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Error" Message="[&quot;Please check if the product range &quot; + in_ProductRange + &quot; exists on the Bunnings website. Alternatively, check for spelling mistakes.&quot;]" />
                                    <Throw DisplayName="Throw BusinessRuleException" Exception="[New BusinessRuleException(&quot;Error: Product range scraped from the website does not match the product range from the ProductInput file.&quot;)]" sap:VirtualizedContainerService.HintSize="447.3333333333333,114.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_5" />
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="516.6666666666666,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_78">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <uix:NExtractData AppendResults="False" ContinueOnError="True" DataTable="[dtExtractProductData]" DisplayName="Extract table data from Bunnings website" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Structured' AddCvHeader='true' IsScrollEnabled='false'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column0' Name='ProductName'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;true&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column2' Name='ProductPrice' Sort='Asc'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;true&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='NumberColumnFormat' DecimalSeparator='.' ThousandsSeparator=',' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column1' Name='NumberOfReviews'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;true&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='NumberColumnFormat' DecimalSeparator='' ThousandsSeparator='' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract&gt;&lt;row exact='1'&gt;&lt;webctrl tag='div' idx='3' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='article' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;/row&gt;&lt;column exact='1' name='Column0' attr='fulltext'&gt;&lt;webctrl tag='div' idx='3' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='article' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='a' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='div' /&gt;&lt;webctrl tag='p' idx='1' /&gt;&lt;/column&gt;&lt;column exact='1' name='Column2' attr='fulltext'&gt;&lt;webctrl tag='div' idx='3' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='article' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='2' /&gt;&lt;webctrl tag='a' idx='1' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='div' idx='1' /&gt;&lt;webctrl tag='p' idx='1' /&gt;&lt;/column&gt;&lt;column css-selector='.ratings-star-container' name='Column1' attr='fulltext' /&gt;&lt;/extract&gt;" HealingAgentBehavior="SameAsCard" sap:VirtualizedContainerService.HintSize="518.6666666666666,192" sap2010:WorkflowViewState.IdRef="NExtractData_11" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="9fe06646-08ab-41d8-b646-04612213c233" Version="V5">
                          <uix:NExtractData.Target>
                            <uix:TargetAnchorable BrowserURL="https://www.bunnings.com.au/products/tools/safety-equipment-workwear?page=1&amp;pageSize=36" DesignTimeRectangle="11, -6189, 1897, 8261" DesignTimeScaleFactor="1.5" FullSelectorArgument="&lt;webctrl class='container-main' parentid='main' tag='DIV' /&gt;" Guid="99a6e33c-1afa-4f15-a715-0867a79b5aed" InformativeScreenshot="1378542696dab7f66acc7cefffec4fea.png" ScopeSelectorArgument="[string.Format(&quot;&lt;html app='chrome.exe' title='{0}*' /&gt;&quot;, in_ProductRange)]" SearchSteps="Selector" Version="V6" Visibility="Interactive" />
                          </uix:NExtractData.Target>
                        </uix:NExtractData>
                        <If Condition="[dtExtractProductData.RowCount &gt; 0]" DisplayName="Check if extracted data table is not empty" sap:VirtualizedContainerService.HintSize="518.6666666666666,395.3333333333333" sap2010:WorkflowViewState.IdRef="If_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then continu process data" sap:VirtualizedContainerService.HintSize="416,230" sap2010:WorkflowViewState.IdRef="Sequence_79">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log the number of rows in extracted data table" sap:VirtualizedContainerService.HintSize="382,170" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Extracted data table contains &quot; + dtExtractProductData.RowCount.ToString + &quot; rows to process.&quot;]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else no data to process, throw BusinessRuleEception" sap:VirtualizedContainerService.HintSize="416,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_80">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log error message about failed data scraping" sap:VirtualizedContainerService.HintSize="382,179.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Error" Message="[&quot;Failed to scrape data from the Bunnings webpage: no data available for processing.&quot;]" />
                              <Throw DisplayName="Throw exception for empty scraped data" Exception="[New BusinessRuleException(&quot;Error: No data available for processing. The scraped DataTable is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="382,114.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_6" />
                            </Sequence>
                          </If.Else>
                        </If>
                        <ui:MergeDataTable Destination="[out_MergedProductData]" DisplayName="Merge table into out_MergedDt" sap:VirtualizedContainerService.HintSize="518.6666666666666,168.66666666666666" sap2010:WorkflowViewState.IdRef="MergeDataTable_10" MissingSchemaAction="Add" Source="[dtExtractProductData]" />
                        <ui:LogMessage DisplayName="Log product range and remaining pages to extract." sap:VirtualizedContainerService.HintSize="518.6666666666666,179.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Trace" Message="[&quot;Pages to extract left: &quot; + (in_PageToExtract-pageCounter).ToString + Environment.NewLine +&#xD;&#xA;&quot;Merged product data table contains &quot; + out_MergedProductData.RowCount.ToString + &quot; rows.&quot;]" />
                        <Assign DisplayName="Re-assign pageCounter" sap:VirtualizedContainerService.HintSize="518.6666666666666,110.66666666666667" sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[pageCounter]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[pageCounter+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ActivityAction>
                  </uix:NApplicationCard.Body>
                  <uix:NApplicationCard.TargetApp>
                    <uix:TargetApp Area="2245, -11, 1942, 1030" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsSAAALEgHS3X78AAAAB3RJTUUH5AcVBAwi6jouvQAABGBJREFUWEell0mIZEUQhlvHEcFldNy7YvSk03/jyR1RweXqdhBRD85BDwojbuB6UAQPogiCOHoU1JPjSU+Kiggu4LihU38rggqCuOCuuIx8ryLL7KxXXd09AQHv5Yv4IzIylnxzczPICng/Kxat2G7FTis+s+J3K/Yk88wa35BR6rRwq6c0vMGKM6zYYcWXVvxjxY9WfGzFy1Y8n8wza3xDBll00AWjhZ9OaRiet+JBK76z4g8rXrXiJitOs+IoKw5IcJhn1viGDLLooAsGWB3uilQZP92K13M3r1lxqRUH8224MB1kuDAo+shekrpggAXmdCcq4+dbYSt+tuI+Kw7vDGvQqkwlZBMLXTDAAhPsSSeanSP4rRXX7G0iJSYY2xIT7MlI5ALnRKjwdttQg332xnihUfQCLJwAGxtdTowFrNg3k4XzImQzMzf1AD7QihOsONuK86w4xYpjS/S8cHyRBRNsbGALm2OgMzNEZO8RrXFvna8d5VxPziN6NBPtKyt+seI3K36wYrcVT1txuRWHlpAnNjawhc3OATyjZikbsn0i4VKZsD1hxS4rvs+dlEY0jf/MHnFh2bEVl+X6jqFiAwt0uC/Ss2OsONGKi0frW+qd37ZKo33Mjm+2Yv8s0VfS5iLgtM6/rLjfimes+DrfCePdVlydoWbXLfBamOO5KxOSZvU3tnGA/k0LJYl4bhX/7VmbxYSYXeI4uTBMg+QJGzo1be7EgU+zj2/OaLRg6+GnrDikOr4tVlxvxYdWLFlxgRUfYRsBJhmJsjGzm/NqAdfC5MkVGN+t+S6JSeqlUT5FluCtVryEbRZRYqJRDQdlMrag5ASevzslFzgmQko0aTadAy1lROgPRAebe2oHRo1DcW8D/pMVd6T31PS5Wft8Y+w+bsW1VpxjxVlWvGfFA6X2W6qcGDtQjoCRyjvdjGQpDlD7HE9RhrlwfJJ61PWdVjybjr1hxS3jTtfvALbQ7Y6gJCHznHc63ZNWPGLFVVYMWH9zsKkGgK/LW9CLVjxkxZVWnGTFYVYcWZKwpdTFFja7JCxlyGWCd+p0I/U67AGAUo4ZcJwVm7JLUsY3ZgV8kD2kk+3Rxda4DCk9apTmwORaptBHyGVWs+sXMkF/bXLnrSztZXrJyxpRacU0ju7WM4sqoHt6KqIwecQMmNu1dYSZOhOtuAwjuhcJNRG2Pko5bjjtzmt+OCNVMwOPwTceRvCK47iPUo+5TzK1hgu/b8XRlfHecQyv90KCHL2+NVyYnV5UyY4vJEMN/i/TFFh2JfPiylcykjX1bugxXDONCmNcYCavZFAVojVdSlOHkuprz4UZ67db8U19KZ2otsqJKdfySUdSnsbzdo/hwoSckpt+LS/URKL+MeEnoytRV9c13pdG8o/1GC7MoJr9Y1KocmJVv2ZLi12ZcVx91zXCPv4164viVEonVvNzSit/p3KA0f35un9OW0pHSEYm4LTfc+57nPFzKUN3XTGBC/0HewH5+jKqn80AAAAASUVORK5CYII=" sap2010:WorkflowViewState.IdRef="TargetApp_1" InformativeScreenshot="5935e98e8f347f895b3abb60b166011f.jpg" Selector="[string.Format(&quot;&lt;html app='chrome.exe' title='{0}*' /&gt;&quot;, in_ProductRange)]" Url="[in_ProductURL+ &quot;?page=&quot; + pageCounter.ToString + &quot;&amp;pageSize=36&quot;]" Version="V2" />
                  </uix:NApplicationCard.TargetApp>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </uix:NApplicationCard>
              </Sequence>
            </ui:InterruptibleDoWhile.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:InterruptibleDoWhile>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_6">
            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Handle BusinessRuleException" sap:VirtualizedContainerService.HintSize="622.6666666666666,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_67">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log error message with source and exception" sap:VirtualizedContainerService.HintSize="434,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_21" Level="Error" Message="[&quot;Error message: &quot; + Exception.Message]" />
                <Assign DisplayName="Assign BusinessRuleException" sap:VirtualizedContainerService.HintSize="434,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_11">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                  </Assign.Value>
                </Assign>
                <Rethrow DisplayName="Rethrow BusinessRuleException" sap:VirtualizedContainerService.HintSize="434,48" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="622.6666666666666,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_61">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </TryCatch.Finally>
      </TryCatch>
      <ui:LogMessage DisplayName="Log message" sap:VirtualizedContainerService.HintSize="624.6666666666666,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;ExtractWebProducts END&quot;]" />
    </Sequence>
  </Sequence>
</Activity>