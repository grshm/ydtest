<Activity mc:Ignorable="sap sap2010" x:Class="SortData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_BusinessRuleException" Type="OutArgument(ui:BusinessRuleException)" />
    <x:Property Name="in_BunningsPricingFilePath" Type="InArgument(x:String)" />
    <x:Property Name="in_RawProductDataFilePath" Type="InArgument(x:String)" />
  </x:Members>
  <this:SortData.in_RawProductDataFilePath>
    <InArgument x:TypeArguments="x:String" />
  </this:SortData.in_RawProductDataFilePath>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>SortData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="SaveSortedData" sap:VirtualizedContainerService.HintSize="892.6666666666666,2094" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence sap2010:Annotation.AnnotationText="Description:&#xA;This workflow reads data from the provided file, sorts it by the ProductPrice column in ascending order, and writes the sorted result to a CSV file.&#xA;&#xA;Arguments:&#xA;in_RawProductDataFilePath(String): The full path of the source of raw data.&#xA;in_BunningsPricingFilePath(String): The full path of the output CSV file.&#xA;in_ProcessedProductData (DataTable): The DataTable to be sorted and saved.&#xA;out_BussinessRuleException (BussinessRuleException): A business rule exception that indicating that the required input file is not available for processing.&#xA;&#xA;Pre Conditions: &#xA;The data is sorted by ascending ProductPrice.&#xA;The sorted data is written to the file at in_BunningsPricingFilePath.&#xA;The PricingRaw_[ddMMyyyy].csv file has been deleted from the output folder.&#xA;out_BusinessRuleException is:&#xA;Set to Nothing if the file PricingRaw_[ddMMyyyy].csv exists.&#xA;Set to a BusinessRuleException if the file is missing.&#xA;&#xA;" DisplayName="Sort finall data from CSV file by product price" sap:VirtualizedContainerService.HintSize="552,2071.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="518,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;SaveSortedData START&quot;]" />
      <TryCatch DisplayName="Process raw product data and write a price " sap:VirtualizedContainerService.HintSize="518,1299.3333333333333" sap2010:WorkflowViewState.IdRef="TryCatch_1">
        <TryCatch.Variables>
          <Variable x:TypeArguments="x:Boolean" Name="isFileExists" />
          <Variable x:TypeArguments="upr:ILocalResource" Name="reRawProductDataFilePath" />
        </TryCatch.Variables>
        <TryCatch.Try>
          <Sequence DisplayName="Process raw product data, sort, and write to Bunnings file" sap:VirtualizedContainerService.HintSize="516,1074.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:PathExists DisplayName="Check if raw product data file exists" Exists="[isFileExists]" sap:VirtualizedContainerService.HintSize="482,150.66666666666666" sap2010:WorkflowViewState.IdRef="PathExists_1" Path="[in_RawProductDataFilePath]" PathType="File" Resource="[reRawProductDataFilePath]" />
            <If Condition="[isFileExists]" DisplayName="Check if RawPrices_ddMMyyyy.csv file exists" sap:VirtualizedContainerService.HintSize="482,864" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Read, sort, write product data and delete PricesRaw_ddMMyyyy.csv file" sap:VirtualizedContainerService.HintSize="480,708" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="sortedProductData" />
                    <Variable x:TypeArguments="sd:DataTable" Name="rawProductData" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadCsvFile FilePath="{x:Null}" DataTable="[rawProductData]" Delimitator="Comma" DelimitatorForViewModel="Comma" DisplayName="Read data from CSV file" sap:VirtualizedContainerService.HintSize="446,172" sap2010:WorkflowViewState.IdRef="ReadCsvFile_1" PathResource="[reRawProductDataFilePath]" />
                  <Assign DisplayName="Sort data table by ProductPrice" sap:VirtualizedContainerService.HintSize="446,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[sortedProductData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[rawProductData.AsEnumerable().OrderBy(Function(row) Decimal.Parse(row("ProductPrice").ToString.Trim)).CopyToDataTable()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log the number of rows in the sorted data table" sap:VirtualizedContainerService.HintSize="446,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;The data table extracted from the &quot; + in_RawProductDataFilePath + &quot; and sorted by ascending product price contains &quot; + sortedProductData.RowCount.ToString + &quot; rows.&quot;]" />
                  <ui:WriteCsvFile AddHeaders="True" DataTable="[sortedProductData]" Delimitator="Comma" DisplayName="Write Sorted BunningsPricingFile CSV" FilePath="[in_BunningsPricingFilePath]" sap:VirtualizedContainerService.HintSize="446,182" sap2010:WorkflowViewState.IdRef="WriteCsvFile_1" ShouldQuote="True" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Handle missing RawPrices file by logging error and throwing exception" sap:VirtualizedContainerService.HintSize="480,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_4">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log error if PricesRaw__ddMMyyyy.csv file is missing" sap:VirtualizedContainerService.HintSize="433.3333333333333,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;No PricesRaw_ddMMyyyy.csv file detected.Processing cannot continue.&quot;]" />
                  <Throw DisplayName="Throw exception for missing RawPrices file" Exception="[New BusinessRuleException(&quot;Error: PricesRaw_[ddMMyyyy].csv file is missing.&quot;)]" sap:VirtualizedContainerService.HintSize="433.3333333333333,114.66666666666667" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </TryCatch.Try>
        <TryCatch.Catches>
          <Catch x:TypeArguments="ui:BusinessRuleException" sap2010:WorkflowViewState.IdRef="Catch`1_2">
            <ActivityAction x:TypeArguments="ui:BusinessRuleException">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="ui:BusinessRuleException" Name="exception" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Handle Business Rule Exception" sap:VirtualizedContainerService.HintSize="516,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_6">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log error message" sap:VirtualizedContainerService.HintSize="469.3333333333333,176.66666666666666" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Error message &quot; + out_BusinessRuleException.Message]" />
                <Assign DisplayName="Assign BusinessRuleException" sap:VirtualizedContainerService.HintSize="469.3333333333333,117.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:BusinessRuleException">[out_BusinessRuleException]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:BusinessRuleException">[Exception]</InArgument>
                  </Assign.Value>
                </Assign>
                <Rethrow DisplayName="Rethrow BusinessRuleException" sap:VirtualizedContainerService.HintSize="469.3333333333333,48" sap2010:WorkflowViewState.IdRef="Rethrow_2" />
              </Sequence>
            </ActivityAction>
          </Catch>
        </TryCatch.Catches>
        <TryCatch.Finally>
          <Sequence DisplayName="Finally" sap:VirtualizedContainerService.HintSize="516,25.333333333333332" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </TryCatch.Finally>
      </TryCatch>
      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="518,167.33333333333334" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;SaveSortedData END&quot;]" />
    </Sequence>
  </Sequence>
</Activity>